<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hrsb.cg.dao.ProductLiteratureMapper">
  <resultMap id="BaseResultMap" type="com.hrsb.cg.model.ProductLiterature">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="download_name" jdbcType="VARCHAR" property="downloadName" />
    <result column="download_url" jdbcType="VARCHAR" property="downloadUrl" />
    <result column="manager_id" jdbcType="INTEGER" property="managerId" />
    <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime" />
    <result column="spare1" jdbcType="VARCHAR" property="spare1" />
    <result column="spare2" jdbcType="VARCHAR" property="spare2" />
    <result column="spare3" jdbcType="VARCHAR" property="spare3" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="issue" property="issue" jdbcType="VARCHAR" />
    <result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hrsb.cg.model.ProductLiterature">
    <result column="summary" jdbcType="LONGVARCHAR" property="summary" />
  </resultMap>
  <sql id="Base_Column_List">
    id, product_id, title, image, author, download_name, download_url, manager_id, operate_time, 
    spare1, spare2, spare3, state, issue, publish_time
  </sql>
  <sql id="Blob_Column_List">
    summary
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hd_product_literature
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectByProductId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hd_product_literature
    where product_id = #{productId} and state = 1
  </select>
  
  <select id="selectByTitleAndSummary" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hd_product_literature
    where state = 1 and
    	(title like concat('%',#{gskeyword,jdbcType=VARCHAR},'%')
    	or summary like concat('%',#{gskeyword,jdbcType=VARCHAR},'%'))
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from hd_product_literature
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hrsb.cg.model.ProductLiterature">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hd_product_literature (id, product_id, title, 
      image, author, download_name, 
      download_url, manager_id, operate_time, 
      spare1, spare2, spare3, 
      state, summary)
    values (#{id,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{image,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, #{downloadName,jdbcType=VARCHAR}, 
      #{downloadUrl,jdbcType=VARCHAR}, #{managerId,jdbcType=INTEGER}, #{operateTime,jdbcType=TIMESTAMP}, 
      #{spare1,jdbcType=VARCHAR}, #{spare2,jdbcType=VARCHAR}, #{spare3,jdbcType=VARCHAR}, 
      #{state,jdbcType=TINYINT}, #{summary,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hrsb.cg.model.ProductLiterature" keyProperty="id" useGeneratedKeys="true">
    insert into hd_product_literature
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="productId != null">
        product_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="downloadName != null">
        download_name,
      </if>
      <if test="downloadUrl != null">
        download_url,
      </if>
      <if test="managerId != null">
        manager_id,
      </if>
      <if test="operateTime != null">
        operate_time,
      </if>
      <if test="spare1 != null">
        spare1,
      </if>
      <if test="spare2 != null">
        spare2,
      </if>
      <if test="spare3 != null">
        spare3,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="issue != null">
        issue,
      </if>
      <if test="publishTime != null">
        publish_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="downloadName != null">
        #{downloadName,jdbcType=VARCHAR},
      </if>
      <if test="downloadUrl != null">
        #{downloadUrl,jdbcType=VARCHAR},
      </if>
      <if test="managerId != null">
        #{managerId,jdbcType=INTEGER},
      </if>
      <if test="operateTime != null">
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="spare1 != null">
        #{spare1,jdbcType=VARCHAR},
      </if>
      <if test="spare2 != null">
        #{spare2,jdbcType=VARCHAR},
      </if>
      <if test="spare3 != null">
        #{spare3,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=LONGVARCHAR},
      </if>
      <if test="issue != null">
        #{issue,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hrsb.cg.model.ProductLiterature">
    update hd_product_literature
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="downloadName != null">
        download_name = #{downloadName,jdbcType=VARCHAR},
      </if>
      <if test="downloadUrl != null">
        download_url = #{downloadUrl,jdbcType=VARCHAR},
      </if>
      <if test="managerId != null">
        manager_id = #{managerId,jdbcType=INTEGER},
      </if>
      <if test="operateTime != null">
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="spare1 != null">
        spare1 = #{spare1,jdbcType=VARCHAR},
      </if>
      <if test="spare2 != null">
        spare2 = #{spare2,jdbcType=VARCHAR},
      </if>
      <if test="spare3 != null">
        spare3 = #{spare3,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=LONGVARCHAR},
      </if>
      <if test="issue != null">
        issue = #{issue,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hrsb.cg.model.ProductLiterature">
    update hd_product_literature
    set product_id = #{productId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      download_name = #{downloadName,jdbcType=VARCHAR},
      download_url = #{downloadUrl,jdbcType=VARCHAR},
      manager_id = #{managerId,jdbcType=INTEGER},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      spare1 = #{spare1,jdbcType=VARCHAR},
      spare2 = #{spare2,jdbcType=VARCHAR},
      spare3 = #{spare3,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      summary = #{summary,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hrsb.cg.model.ProductLiterature">
    update hd_product_literature
    set product_id = #{productId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      download_name = #{downloadName,jdbcType=VARCHAR},
      download_url = #{downloadUrl,jdbcType=VARCHAR},
      manager_id = #{managerId,jdbcType=INTEGER},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      spare1 = #{spare1,jdbcType=VARCHAR},
      spare2 = #{spare2,jdbcType=VARCHAR},
      spare3 = #{spare3,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectProductLiteratureByPage" parameterType="com.hrsb.cg.util.Page" resultMap="ResultMapWithBLOBs">
  	select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hd_product_literature where 1=1
    <if test="params.productId!=null and params.productId!='' ">
    and product_id = #{params.productId}
    </if>
    <if test="params.title!=null and params.title!='' ">
    and title = #{params.title}
    </if>
  </select>
  
  <select id="selectAPIProductLiteratureByPage" parameterType="com.hrsb.cg.util.Page" resultMap="ResultMapWithBLOBs">
  	select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hd_product_literature where state=1
    <if test="params.productId!=null and params.productId!='' ">
    and product_id = #{params.productId}
    </if>
    <if test="params.title!=null and params.title!='' ">
    and title like #{params.title}
    </if>
  </select>
  
  <select id="selectAll" resultMap="ResultMapWithBLOBs">
  	select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from hd_product_literature where state=1 order by read_count desc
  </select>
  
  <update id="updateReadCount" parameterType="com.hrsb.cg.model.ProductLiterature">
  	update hd_product_literature set read_count = read_count+1 where id = #{id}
  </update>
</mapper>
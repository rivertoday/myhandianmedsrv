<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hrsb.cg.dao.UserLoginMapper" >
  <resultMap id="BaseResultMap" type="com.hrsb.cg.model.UserLogin" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="frozen" property="frozen" jdbcType="TINYINT" />
    <result column="spare1" property="spare1" jdbcType="VARCHAR" />
    <result column="spare2" property="spare2" jdbcType="VARCHAR" />
    <result column="spare3" property="spare3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, phone, token, password, frozen, spare1, spare2, spare3
  </sql>
  
  <select id="isExistLoginName" resultMap="BaseResultMap" parameterType="java.lang.String">
  	 select 
    <include refid="Base_Column_List" />
    from hd_user_login
    where phone = #{phone}
  
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from hd_user_login
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectByPhoneAndPassword" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hd_user_login
    where phone = #{0} and `password` = #{1}
  </select>
  
  <select id="selectByPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hd_user_login
    where phone = #{phone} order by id limit 1;
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from hd_user_login
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hrsb.cg.model.UserLogin" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hd_user_login (id, phone, token, 
      password, frozen, spare1, 
      spare2, spare3)
    values (#{id,jdbcType=BIGINT}, #{phone,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{frozen,jdbcType=TINYINT}, #{spare1,jdbcType=VARCHAR}, 
      #{spare2,jdbcType=VARCHAR}, #{spare3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hrsb.cg.model.UserLogin" keyProperty="id" useGeneratedKeys="true">
    insert into hd_user_login
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="phone != null" >
        phone,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="frozen != null" >
        frozen,
      </if>
      <if test="spare1 != null" >
        spare1,
      </if>
      <if test="spare2 != null" >
        spare2,
      </if>
      <if test="spare3 != null" >
        spare3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=BIGINT},
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="frozen != null" >
        #{frozen,jdbcType=TINYINT},
      </if>
      <if test="spare1 != null" >
        #{spare1,jdbcType=VARCHAR},
      </if>
      <if test="spare2 != null" >
        #{spare2,jdbcType=VARCHAR},
      </if>
      <if test="spare3 != null" >
        #{spare3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hrsb.cg.model.UserLogin" >
    update hd_user_login
    <set >
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="frozen != null" >
        frozen = #{frozen,jdbcType=TINYINT},
      </if>
      <if test="spare1 != null" >
        spare1 = #{spare1,jdbcType=VARCHAR},
      </if>
      <if test="spare2 != null" >
        spare2 = #{spare2,jdbcType=VARCHAR},
      </if>
      <if test="spare3 != null" >
        spare3 = #{spare3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateByPhoneSelective" parameterType="com.hrsb.cg.model.UserLogin" >
    update hd_user_login
    <set >
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="frozen != null" >
        frozen = #{frozen,jdbcType=TINYINT},
      </if>
      <if test="spare1 != null" >
        spare1 = #{spare1,jdbcType=VARCHAR},
      </if>
      <if test="spare2 != null" >
        spare2 = #{spare2,jdbcType=VARCHAR},
      </if>
      <if test="spare3 != null" >
        spare3 = #{spare3,jdbcType=VARCHAR},
      </if>
    </set>
    where phone = #{phone,jdbcType=VARCHAR}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.hrsb.cg.model.UserLogin" >
    update hd_user_login
    set phone = #{phone,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      frozen = #{frozen,jdbcType=TINYINT},
      spare1 = #{spare1,jdbcType=VARCHAR},
      spare2 = #{spare2,jdbcType=VARCHAR},
      spare3 = #{spare3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateByPhone">
    update hd_user_login set password = #{0} where phone = #{1}
  </update>
</mapper>